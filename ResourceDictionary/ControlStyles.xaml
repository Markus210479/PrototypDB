<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:PrototypeDB">

    <Style x:Key="DBRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="White" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="17" Height="17">
                                <Ellipse x:Name="Border" StrokeThickness="2">
                                    <Ellipse.Stroke>
                                        <SolidColorBrush Color="Blue" />
                                    </Ellipse.Stroke>
                                    <Ellipse.Fill>
                                        <SolidColorBrush Color="Transparent" />
                                    </Ellipse.Fill>
                                </Ellipse>
                                <Ellipse
                                    x:Name="CheckMark"
                                    Margin="4"
                                    Visibility="Collapsed">
                                    <Ellipse.Fill>
                                        <SolidColorBrush Color="White" />
                                    </Ellipse.Fill>
                                </Ellipse>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter
                            Margin="4,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
                                            <LinearColorKeyFrame KeyTime="0" Value="White" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)">
                                            <LinearColorKeyFrame KeyTime="0" Value="Gray" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <!--<VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Shape.Stroke).(Opacity)"/>
                                    </Storyboard>
                                </VisualState>-->
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DBTextBoxLabel" TargetType="Label">
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Padding" Value="5,0,0,20" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Label}" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Foreground}" />
    </Style>

    <Style x:Key="HeadLineLabelStyle" TargetType="Label">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="30" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style x:Key="DBControlsBorderStyle" TargetType="Border">
        <!--<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}}" />-->
        <Setter Property="BorderThickness" Value="1.5" />
        <Setter Property="CornerRadius" Value="1" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ValueCheckIO}" Value="False">
                <Setter Property="BorderBrush" Value="Red" />
            </DataTrigger>
            <DataTrigger />
        </Style.Triggers>
    </Style>

    <Style x:Key="DBTextBoxStyle" TargetType="{x:Type local:DBTextBoxControl}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="#0C0C0C" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="150" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="0,5,0,0" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DBTextBoxControl}">
                    <Grid>
                        <Border>
                            <Border.Style>
                                <Style BasedOn="{StaticResource DBControlsBorderStyle}" TargetType="Border">
                                    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver}" Value="True">
                                            <Setter Property="Background" Value="#1B1B1B" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Margin="5"
                            HorizontalAlignment="{Binding HorizontalContentAlignment}"
                            VerticalAlignment="{Binding VerticalContentAlignment}"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                        <Label Style="{StaticResource DBTextBoxLabel}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonStyle" TargetType="{x:Type local:DBButton}">
        <Setter Property="Background" Value="#242424" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Width" Value="100" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border
                            Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                            BorderThickness="1.5"
                            CornerRadius="1">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Blue" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver}" Value="True">
                                            <Setter Property="BorderBrush" Value="White" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPressed}" Value="True">
                                            <Setter Property="BorderBrush" Value="Gray" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEnabled}" Value="False">
                                            <Setter Property="Opacity" Value="0.3" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}">
                            <ContentPresenter.Style>
                                <Style TargetType="ContentPresenter">
                                    <Setter Property="Opacity" Value="1" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEnabled}" Value="False">
                                            <Setter Property="Opacity" Value="0.3" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentPresenter.Style>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontWeight" Value="Regular" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="ListBoxItemButtonStyle"
        BasedOn="{StaticResource ButtonStyle}"
        TargetType="{x:Type local:DBListBoxItemButton}">
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Margin" Value="1" />
        <!--<Setter Property="Command" Value="{Binding}"/>
        <Setter Property="CommandParameter" Value="{Binding}"/>-->
    </Style>

    <Style
        x:Key="MainButtonStyle"
        BasedOn="{StaticResource ButtonStyle}"
        TargetType="{x:Type local:DBButton}">
        <Setter Property="Height" Value="65" />
        <Setter Property="Width" Value="140" />
        <Setter Property="FontSize" Value="20" />
    </Style>

    <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="35" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Width" Value="50" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderThickness="2"
                            CornerRadius="3">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Blue" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver}" Value="True">
                                            <Setter Property="BorderBrush" Value="White" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked}" Value="True">
                                            <Setter Property="BorderBrush" Value="Blue" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="Blue" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ToggleButton" TargetType="ToggleButton">
        <Path
            x:Name="Arrow"
            Grid.Column="1"
            Margin="0,5,6,0"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
            Data="M -2 -3 L 4 3 L 10 -3 Z"
            Fill="White"
            SnapsToDevicePixels="True"
            Stroke="White" />

        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="Arrow" Property="Data" Value="M -2 -4 L 4 3 L 10 -4 Z" />
                <Setter TargetName="Arrow" Property="Fill" Value="White" />
                <Setter TargetName="Arrow" Property="Stroke" Value="White" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border
            x:Name="PART_ContentHost"
            Background="{TemplateBinding Background}"
            Focusable="False" />

        <!--<ScrollViewer x:Name="PART_ContentHost" Focusable="False" />-->
    </ControlTemplate>

    <Style x:Key="ComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border
                        x:Name="Bd"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="BorderBrush" Value="Black" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            <Setter Property="BorderThickness" Value="2" />
                            <!--<Setter Property="BorderBrush" Value="Blue" />-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DBComboBoxStyle" TargetType="local:DBComboBoxControl">
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="Width" Value="70" />
        <Setter Property="Height" Value="40" />
        <Setter Property="BorderBrush" Value="Blue" />
        <Setter Property="Background" Value="#242424" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="SelectedIndex" Value="0" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:DBComboBoxControl">
                    <Grid Grid.IsSharedSizeScope="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10*" />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        <Border
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Grid.ColumnSpan="2"
                                Margin="0"
                                Padding="0"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="{x:Null}"
                                BorderThickness="0"
                                IsTabStop="False"
                                TextElement.Foreground="{TemplateBinding Foreground}" />
                            <Border.Style>
                                <Style BasedOn="{StaticResource DBControlsBorderStyle}" TargetType="Border" />
                            </Border.Style>
                        </Border>
                        <ToggleButton Grid.Column="1" Template="{StaticResource ToggleButton}" />
                        <ContentPresenter
                            Name="ContentSite"
                            Margin="0,0,0,0"
                            HorizontalAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalContentAlignment}"
                            VerticalAlignment="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalContentAlignment}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="True" />
                        <!--<TextBox
                            x:Name="PART_EditableTextBox"
                            Margin="3,3,23,3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Bottom"
                            Background="Transparent"
                            Focusable="True"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            Style="{x:Null}"
                            Template="{StaticResource ComboBoxTextBox}"
                            Visibility="Hidden" />-->
                        <ToggleButton
                            x:Name="ToggleButton"
                            Grid.Column="1"
                            ClickMode="Press"
                            Focusable="True"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Opacity="0" />
                        <Popup
                            Name="PART_Popup"
                            Grid.ColumnSpan="2"
                            AllowsTransparency="False"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid
                                Name="DropDown"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border
                                    x:Name="DropDownBorder"
                                    Grid.RowSpan="2"
                                    Grid.ColumnSpan="2"
                                    MaxWidth="{TemplateBinding ActualWidth}"
                                    HorizontalAlignment="Center"
                                    Background="Transparent"
                                    BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                                    BorderThickness="2"
                                    CornerRadius="3"
                                    SnapsToDevicePixels="True">
                                    <ScrollViewer
                                        Grid.Row="1"
                                        Grid.ColumnSpan="2"
                                        Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}"
                                        Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"
                                        ScrollViewer.CanContentScroll="False"
                                        SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" />
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="DBTextBoxComboBoxStyle"
        BasedOn="{StaticResource DBComboBoxStyle}"
        TargetType="local:DBComboBoxControl">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="60" />
        <Setter Property="Margin" Value="5" />
    </Style>

    <Style x:Key="DBTextBoxWithComboBoxControlStyle" TargetType="{x:Type local:DBTextBoxWithComboBoxControl}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Black" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DBTextBoxWithComboBoxControl}">
                    <Grid>
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderThickness="2"
                            CornerRadius="3">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Blue" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ValueCheckIO}" Value="False">
                                            <Setter Property="BorderBrush" Value="Red" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Margin="5"
                            HorizontalAlignment="{Binding HorizontalContentAlignment}"
                            VerticalAlignment="{Binding VerticalContentAlignment}"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden" />
                        <Label Style="{StaticResource DBTextBoxLabel}" />
                        <local:DBComboBoxControl
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom"
                            ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Unit}"
                            SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=UnitAuswahl}"
                            Style="{StaticResource DBTextBoxComboBoxStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Unselectable ListBox Style  -->
    <Style x:Key="DBUnselectableListBoxStyle" TargetType="ListBoxItem">
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <!--  Logger ListBox Style  -->
    <Style
        x:Key="AlternateRowColorListboxItemStyle"
        BasedOn="{StaticResource DBUnselectableListBoxStyle}"
        TargetType="ListBoxItem">
        <Setter Property="Background" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="#FF383434" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ##########  Vertical ScrollBar Style ##########  -->

    <!--  ScrollBarLineButton Style  -->
    <Style x:Key="DBScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="Transparent" />
                        </Border.BorderBrush>
                        <Border.Background>
                            <SolidColorBrush Color="Transparent" />
                        </Border.Background>
                        <Path
                            x:Name="Arrow"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}">
                            <Path.Fill>
                                <SolidColorBrush Color="White" />
                            </Path.Fill>
                        </Path>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ScrollBarPageButton Style  -->
    <Style x:Key="DBScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ScrollViewer Thumb Style  -->
    <Style x:Key="DBScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="#FF383434" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Vertical Scrollbar ControlTemplate  -->
    <ControlTemplate x:Key="DBVerticalScrollBarTemplate" TargetType="{x:Type ScrollBar}">
        <Grid Height="{Binding RelativeSource={RelativeSource Self}, Path=Height}">
            <Grid.RowDefinitions>
                <RowDefinition Height="25" />
                <RowDefinition Height="*" />
                <RowDefinition Height="25" />
            </Grid.RowDefinitions>
            <Rectangle
                Grid.Row="0"
                Grid.RowSpan="3"
                Width="32"
                Height="{Binding RelativeSource={RelativeSource Self}, Path=Height}"
                HorizontalAlignment="Center"
                Fill="#181818" />
            <RepeatButton
                Grid.Row="0"
                Width="32"
                Height="25"
                Margin="0,5,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Command="ScrollBar.LineUpCommand"
                Content="M -1 4 L 13 4 L 6 -5 Z"
                Style="{StaticResource DBScrollBarLineButtonStyle}" />
            <Track
                x:Name="PART_Track"
                Grid.Row="1"
                Width="16"
                HorizontalAlignment="Center"
                IsDirectionReversed="true"
                Orientation="Vertical">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource DBScrollBarPageButtonStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource DBScrollBarThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource DBScrollBarPageButtonStyle}" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton
                Grid.Row="2"
                Width="32"
                Height="25"
                Margin="0,5,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Command="ScrollBar.LineDownCommand"
                Content="M -1 0 L 7 8 L 14 0 Z"
                Style="{StaticResource DBScrollBarLineButtonStyle}" />
        </Grid>
    </ControlTemplate>

    <!--  Vertical ScrollBar style  -->
    <Style x:Key="DBScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource DBVerticalScrollBarTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DBListTextBlockStyle" TargetType="{x:Type local:DBListTextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />

    </Style>

    <Style
        x:Key="ReleasesListTextBlockStyle"
        BasedOn="{StaticResource DBListTextBlockStyle}"
        TargetType="{x:Type local:DBReleasesListTextBlock}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style
        x:Key="DBListHeadLineTextBlockStyle"
        BasedOn="{StaticResource DBListTextBlockStyle}"
        TargetType="{x:Type local:DBListHeadLineTextBlock}">
        <Setter Property="FontSize" Value="17" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="TabItemStyle" TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid Name="Panel">
                        <Border
                            Name="Border"
                            Background="#242424"
                            BorderBrush="Black"
                            BorderThickness="1,1,1,1"
                            CornerRadius="0,16,0,0">
                            <TextBlock
                                x:Name="ContentSite"
                                Margin="12"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="15"
                                Foreground="White"
                                Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Header}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ContentSite" Property="FontWeight" Value="Bold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabControlStyle" TargetType="TabControl">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel
                            x:Name="HeaderPanel"
                            Grid.Row="0"
                            Margin="0,0,4,-1"
                            Panel.ZIndex="1"
                            Background="Transparent"
                            IsItemsHost="True"
                            KeyboardNavigation.TabIndex="1" />
                        <Border
                            x:Name="Border"
                            Grid.Row="1"
                            BorderThickness="1"
                            CornerRadius="0"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,0.005">
                                    <GradientStop Offset="1" Color="Transparent" />
                                    <GradientStop Offset="0" Color="Black" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <ContentPresenter
                                x:Name="PART_SelectedContentHost"
                                Margin="4"
                                ContentSource="SelectedContent" />
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).                     (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFAAAAAA" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>